use std::{fs::File, io::Read};

pub const FONT: [u8; 80] = [
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80  // F
];

pub fn load_rom(path: String) -> [u8; 4096] { 
    let mut rom = File::open(path).unwrap();
    let mut buf = [0u8; 3584];
    rom.read(&mut buf).unwrap();
    
    let start_of_rom = load_font();
    let mut rom = [0u8; 4096];

    for i in 0..start_of_rom.len() {
        rom[i] = start_of_rom[i];
    }

    for i in 0..buf.len() {
        rom[i + 0x200] = buf[i];
    }

    rom
}

fn load_font() -> [u8; 512] {
    let mut start_of_rom = [0u8; 0x200];

    for i in 0..FONT.len() {
        start_of_rom[i + 50] = FONT[i];
    }

    start_of_rom
}